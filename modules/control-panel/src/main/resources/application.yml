##security.require_ssl: true



server: ## Config Web Server
   port: 18000
   contextPath: /controlpanel
   max-http-header-size: 10000000
   tomcat:
      access_log_enabled: true
      basedir: target/tomcat

# all access to actuator endpoints without security
management.security.enabled: false

sofia2: #Config Sofia2 specific
   locale.default: en
   encription.key: sofia2
   devices:
      timeout_devices_inseconds:300
   database.elasticsearch:
      database: sofia2_s4c_es
      sql.maxHttpConnections: 10
      sql.maxHttpConnectionsPerRoute: 10
      sql.connectionTimeout.millis: 10000
      sql.connector.http.endpoint: http://localhost:9200
      url: localhost
      port: 9300
   database.mongodb:
      database: sofia2_s4c
      authenticationDatabase:  #admin
      servers: localhost:27017
      autoConnectRetry: true
      socketTimeout: 5000
      maxAutoConnectRetryTime: 5000
      maxWaitTime: 5000
      useAuth: false
      username: #username
      password: #password
      readFromSecondaries: false
      queries.executionTimeout: 5000
      queries.defaultLimit: 2000
      queries.maxConcurrentQueries: 3
      writeConcern: UNACKNOWLEDGED
      tools.mongoexport.path: mongoexport
      tools.mongoimport.path: mongoimport
      tools.mongoshell.path: mongo
      tools.useSequentialOps: true
      digitaltwin.database: digital_twin
   urls:
    iotbroker: http://localhost:19000
    iotbroker.services: http://localhost:19000/sib/services
   paths:
      ssap: /ssap
   flowengine.services:
      request.timeout.ms: 5000
      baseurl: http://localhost:20100/flowengine/admin   
      proxyurl: http://localhost:5050/
   controlpanel.avoidsslverification: true
   webproject:
      rootfolder.path: /usr/local/webprojects/
      baseurl: https://localhost:18000/web/        
   iotbroker.plugable:
     gateway:
      kafka:
        prefix: ontology_
        group: ontologyGroup
        topic.pattern: ontology.*
        router.topic: router
        consumer.consumersCount : 10
        consumer.group : kafkaGroup
        consumer.maxPollRecords : 5000 
   analytics.notebook:
      zeppelinProtocol: http
      zeppelinHostname: 192.168.99.100
      zeppelinPort: 8080
      zeppelinPathname: 
      shiroAdminUsername: admin
      shiroAdminPass: password1
      shiroUsername: user1
      shiroPass: password2
      restUsername: userrest
      restPass: passrest
      notebookInfoPath: /api/notebook/
      restTimeout.millis: 10000
spring: ## General Config  
   application.name: sofia2-control-panel
   thymeleaf: ## Thymeleaf Config
      cache: false  
      #encoding: UTF-8
      #prefix: classpath:/templates/
      #check-template: true
      #check-template-location: true
      #content-type: text/html
      #enabled: true
      # excluded-view-names:
      # mode: HTML5
      # prefix: /templates/
      # suffix: .html
      # template-resolver-order:
      # view-names:
   datasource: ## JPA Config
      url: jdbc:mysql://localhost:3306/sofia2_s4c?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
      username: root
      password: changeIt!
      # Number of ms to wait before throwing an exception if no connection is available.
      tomcat.max-wait: 10000
      # Maximum number of active connections that can be allocated from this pool at the same time.
      tomcat.max-active: 50
      # Validate the connection before borrowing it from the pool.
      tomcat.test-on-borrow: true
      driver-class-name: com.mysql.jdbc.Driver
      test-while-idle: true
      test-on-borrow: true
      validation-query: SELECT 1      
   jpa:
      ## Hibernate Properties
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      hibernate.ddl-auto: update
      hibernate.temp.use_jdbc_metadata_defaults: false
   boot.admin: #Spring Boot Admin Config    
      url: http://localhost:18100/
      username: operations
      password: changeIt!
      client.metadata.user.name: ${spring.boot.admin.username}
      client.metadata.user.password: ${spring.boot.admin.password}
   http:
      multipart:
         max-file-size: 200Mb
         max-request-size: 200Mb

spring.elasticsearch.jest.uris: ${sofia2.database.elasticsearch.sql.connector.http.endpoint}
spring.elasticsearch.jest.read-timeout: ${sofia2.database.elasticsearch.sql.connectionTimeout.millis}

        
quartz:      
   datasource:
      url: "@sofia2.quartzURL@"
      username: root
      password: changeIt!
      driver-class-name: com.mysql.jdbc.Driver
      test-while-idle: true
      test-on-borrow: true
      validation-query: SELECT 1
   jpa:
      ## Hibernate Properties
      # The SQL dialect makes Hibernate generate better SQL for the chosen database
      properties.hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
      # Hibernate ddl auto (create, create-drop, validate, update)
      properties.hibernate.hbm2ddl.auto: update
      properties.hibernate.hbm2ddl.import_files: /quartz-schema.sql
   autoStartupSchedulers:
      #- scriptScheduler
      #- twitterScheduler  
           
## LOGGING CONF
logging:
   path: ./target/ 
   file: ${spring.application.name}
   level:
      com.indra: DEBUG
      
## Digital Twin
digitaltwin:
   temp.dir: /tmp
   maven.exec.path: /usr/share/maven/bin/mvn
   
build.version: "@project.version@"   


#oauth configurations
security:
  signing-key: s1f41234pwqdqkl4l12ghg9853123sds1f41234pwqdqkl4l12ghg9853123sd
  jwt:
    client-id: sofia2_s4c
    client-secret: sofia2_s4c
    grant-type: authorization_code,refresh_token,password
    scopes: openid
